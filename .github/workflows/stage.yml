name: Stage via Docker Build and Push

on:
  push:
    branches:
      - master

  workflow_run:
    workflows: ['Formatting - Tests - Builds']
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      REPOSITORY_URL: docker.pkg.github.com
      IMAGE_NAME: ${{ secrets.DOCKERHUB_LOGIN }}/coldry-stage
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      LINKEDIN_CLIENT_ID: ${{ secrets.LINKEDIN_CLIENT_ID }}
      LINKEDIN_CLIENT_SECRET: ${{ secrets.LINKEDIN_CLIENT_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_PROVIDER_EMAIL_VERIFICATION_SECRET: ${{ secrets.NEXTAUTH_PROVIDER_EMAIL_VERIFICATION_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#deployment'
          message: Starting Docker Build and Push...
        if: always()

      - name: Checkout
        uses: actions/checkout@v3

      - name: Variables
        id: vars
        run: |
          echo "SHORT_COMMIT_ID=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
          echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
          echo "LINKEDIN_CLIENT_ID=$LINKEDIN_CLIENT_ID" >> .env
          echo "LINKEDIN_CLIENT_SECRET=$LINKEDIN_CLIENT_SECRET" >> .env
          echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env
          echo "NEXTAUTH_PROVIDER_EMAIL_VERIFICATION_SECRET=$NEXTAUTH_PROVIDER_EMAIL_VERIFICATION_SECRET" >> .env
          echo "RESEND_API_KEY=$RESEND_API_KEY" >> .env

      - name: Build image
        id: docker-build
        run: >-
          docker build
          --build-arg SLACK_WEBHOOK_URL=$SLACK_WEBHOOK_URL
          -t $IMAGE_NAME
          -t $IMAGE_NAME:${{ steps.vars.outputs.SHORT_COMMIT_ID }}
          -t $IMAGE_NAME:latest .

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_LOGINN }}

      - name: Publish Image
        id: docker-push
        run: docker push $IMAGE_NAME

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#deployment'
        if: always()
