// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
    @@map("accounts")
}

model User {
    id            String    @id @default(cuid())
    givenName     String?   @map("given_name")
    familyName    String?   @map("family_name")
    email         String?   @unique
    emailVerified DateTime? @map("email_verified")
    password      String?
    image         String?
    creditsUsed   Int       @default(0) @map("credits_used")
    createdAt     DateTime  @default(now()) @map("created_at")
    updatedAt     DateTime  @updatedAt @map("updated_at")
    onboardedAt   DateTime? @map("onboarded_at")

    // Integrations
    integrations Integrations[]

    // Acount
    accounts Account[]

    // Plan
    planId String? @map("plan_id")
    plan   Plan?   @relation(fields: [planId], references: [id], onDelete: SetNull)

    // Team
    teamId String? @map("team_id")
    team   Team?   @relation(fields: [teamId], references: [id], onDelete: SetNull)

    // Stripe
    stripeCustomerId       String?   @map("stripe_customer_id")
    stripeSubscriptionId   String?   @map("stripe_subscription_id")
    stripePriceId          String?   @map("stripe_price_id")
    stripeCurrentPeriodEnd DateTime? @map("stripe_current_period_end")

    @@unique([email, stripeCustomerId, stripeSubscriptionId])
    @@index([planId])
    @@index([teamId])
    @@map("users")
}

model UnVerifiedUser {
    id         String   @id @default(cuid())
    givenName  String?  @map("given_name")
    familyName String?  @map("family_name")
    email      String?  @unique
    password   String?
    createdAt  DateTime @default(now()) @map("created_at")

    @@map("unverified_users")
}

model Integrations {
    id     String  @id @default(cuid())
    name   String  @unique
    url    String
    image  Bytes   @db.Blob
    User   User?   @relation(fields: [userId], references: [id])
    userId String?

    @@index([userId])
    @@map("integrations")
}

model Plan {
    id      String @id @default(cuid())
    name    String @unique
    price   Int
    credits Int
    User    User[]
    Team    Team[]

    @@map("plans")
}

model Team {
    id      String @id @default(cuid())
    name    String @unique
    members User[]

    planId String? @map("plan_id")
    plan   Plan?   @relation(fields: [planId], references: [id], onDelete: SetNull)

    @@index([planId])
    @@map("teams")
}
