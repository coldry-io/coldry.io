// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id                String   @id @default(auto()) @map("_id") @db.ObjectId
    userId            String   @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.String
    access_token      String?  @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.String
    session_state     String?
    createdAt         DateTime @default(now()) @map(name: "created_at")
    updatedAt         DateTime @default(now()) @map(name: "updated_at")

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map(name: "accounts")
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    givenName     String?   @map(name: "given_name")
    familyName    String?   @map(name: "family_name")
    email         String?   @unique
    emailVerified DateTime? @map(name: "email_verified")
    password      String?
    image         String?
    createdAt     DateTime  @default(now()) @map(name: "created_at")
    updatedAt     DateTime  @default(now()) @map(name: "updated_at")

    // Account
    accounts Account[]

    // Plan
    planId String? @db.ObjectId
    plan   Plan?   @relation(fields: [planId], references: [id])

    // Team
    teamId String? @db.ObjectId
    Team   Team?   @relation(fields: [planId], references: [id])

    // Stripe
    stripeCustomerId       String?   @map(name: "stripe_customer_id")
    stripeSubscriptionId   String?   @map(name: "stripe_subscription_id")
    stripePriceId          String?   @map(name: "stripe_price_id")
    stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

    @@unique([email, stripeCustomerId, stripeSubscriptionId])
    @@map(name: "users")
}

model UnVerifiedUser {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    givenName  String?  @map(name: "given_name")
    familyName String?  @map(name: "family_name")
    email      String?  @unique
    password   String?
    createdAt  DateTime @default(now()) @map(name: "created_at")

    @@map(name: "unverified_users")
}

model Plan {
    id             String @id @default(auto()) @map("_id") @db.ObjectId
    name           String
    price          Int
    credits        Int
    creditsUsed    Int
    overageCredits Int

    users User[]
    teams Team[]

    @@map(name: "plans")
}

model Team {
    id             String   @id @default(auto()) @map("_id") @db.ObjectId
    name           String
    members        User[]
    pendingMembers String[]

    planId String @db.ObjectId
    plan   Plan?  @relation(fields: [planId], references: [id])

    @@map(name: "teams")
}
